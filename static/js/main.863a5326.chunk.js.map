{"version":3,"sources":["components/Definitions/Definitions.js","components/Footer/Footer.js","data/category.js","components/Header/Header.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Definitions","meanings","word","LightTheme","category","className","style","backgroundColor","borderRadius","src","phonetics","audio","controls","map","mean","item","definitions","def","color","definition","width","example","synonyms","s","Footer","marginTop","href","target","categories","value","label","Header","setCategory","setWord","setMeanings","darkTheme","createMuiTheme","palette","primary","main","type","deb","useCallback","debounce","text","ThemeProvider","theme","TextField","id","onChange","e","select","handleChange","countries","option","MenuItem","App","useState","setLightTheme","dictionaryApi","a","axios","get","data","console","log","useEffect","PurpleSwitch","withStyles","switchBase","grey","checked","track","Switch","height","transition","Container","maxWidth","display","flexDirection","justifyContent","position","top","right","paddingTop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.863a5326.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Definitions.css\";\n\nconst Definitions = ({ meanings, word, LightTheme, category }) => {\n  return (\n    <div className=\"meanings\">\n      {/* audio---------------------------- */}\n      {meanings[0] && word && category === \"en\" && (\n        <audio\n          style={{ backgroundColor: \"#fff\", borderRadius: 10 }}\n          src={meanings[0].phonetics[0] && meanings[0].phonetics[0].audio}\n          controls\n        >\n          Your browser does not support the audio element.\n        </audio>\n      )}\n      {/* audio---------------------------- */}\n\n      {word === \"\" ? (\n        <span className=\"subTitle\">Start by typing a word in search</span>\n      ) : (\n        meanings.map((mean) =>\n          mean.meanings.map((item) =>\n            item.definitions.map((def) => (\n              <div\n                className=\"singleMean\"\n                style={{\n                  backgroundColor: LightTheme ? \"#3b5360\" : \"white\",\n                  color: LightTheme ? \"white\" : \"black\",\n                }}\n              >\n                <b>{def.definition}</b>\n                <hr style={{ backgroundColor: \"black\", width: \"100%\" }} />\n                {def.example && (\n                  <span>\n                    <b>Example :</b> {def.example}\n                  </span>\n                )}\n                {def.synonyms && (\n                  <span>\n                    <b>Synonyms :</b> {def.synonyms.map((s) => `${s}, `)}\n                  </span>\n                )}\n              </div>\n            ))\n          )\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Definitions;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <hr style={{ width: \"90%\", marginTop: 20 }} />\n      <span className=\"name\">\n        Made by{\" \"}\n        <a href=\"http://linkedin.com/in/kuldeep-tomar-0b266a190\" target=\"__blank\">\n          Kuldeep Tomar\n        </a>\n      </span>\n      <div className=\"iconContainer\">\n        <a href=\"https://www.instagram.com/life_racer/\" target=\"__blank\">\n          <i className=\"fab fa-instagram-square fa-2x\"></i>\n        </a>\n        <a href=\"http://linkedin.com/in/kuldeep-tomar-0b266a190\" target=\"__blank\">\n          <i className=\"fab fa-linkedin fa-2x\"></i>\n        </a>\n        <a href=\"\" target=\"__blank\">\n          <i className=\"fas fa-link fa-2x\"></i>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","const categories = [\n  { value: \"English\", label: \"en\" },\n  { value: \"Hindi\", label: \"hi\" },\n  { value: \"Spanish\", label: \"es\" },\n  { value: \"French\", label: \"fr\" },\n  { value: \"Japanese\", label: \"ja\" },\n  { value: \"Russian\", label: \"ru\" },\n  { value: \"German\", label: \"de\" },\n  { value: \"Italian\", label: \"it\" },\n  { value: \"Korean\", label: \"ko\" },\n  { value: \"Brazilian Portuguese\", label: \"pt-BR\" },\n  { value: \"Arabic\", label: \"ar\" },\n  { value: \"Turkish\", label: \"tr\" },\n];\n\nexport default categories;\n","import { createMuiTheme, TextField, ThemeProvider } from \"@material-ui/core\";\nimport React, { useCallback } from \"react\";\nimport \"./Header.css\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport countries from \"../../data/category\";\nimport { debounce } from \"lodash\";\n\nconst Header = ({\n  category,\n  setCategory,\n  setWord,\n  word,\n  setMeanings,\n  LightTheme,\n}) => {\n  const darkTheme = createMuiTheme({\n    palette: {\n      primary: {\n        main: LightTheme ? \"#000\" : \"#fff\",\n      },\n      type: LightTheme ? \"light\" : \"dark\",\n    },\n  });\n\n  const handleChange = (e) => {\n    setCategory(e.target.value);\n    setWord(\"\");\n    setMeanings([]);\n  };\n\n  const deb = useCallback(\n    debounce((text) => setWord(text), 1000),\n    []\n  );\n\n  const handleText = (text) => {\n    deb(text);\n  };\n\n  return (\n    <div className=\"header\">\n      <span className=\"title\">{word ? word : \"Word Hunt\"}</span>\n      <div className=\"inputs\">\n        <ThemeProvider theme={darkTheme}>\n          <TextField\n            className=\"search\"\n            id=\"filled-basic\"\n            // value={word}\n            label=\"Search a Word\"\n            onChange={(e) => handleText(e.target.value)}\n          />\n          <TextField\n            select\n            label=\"Language\"\n            value={category}\n            onChange={(e) => handleChange(e)}\n            className=\"select\"\n          >\n            {countries.map((option) => (\n              <MenuItem key={option.label} value={option.label}>\n                {option.value}\n              </MenuItem>\n            ))}\n          </TextField>\n        </ThemeProvider>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { Container, Switch, withStyles } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Definitions from \"./components/Definitions/Definitions\";\nimport Footer from \"./components/Footer/Footer\";\nimport Header from \"./components/Header/Header\";\n\nfunction App() {\n  const [word, setWord] = useState(\"\");\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n  const [LightTheme, setLightTheme] = useState(false);\n\n  const dictionaryApi = async () => {\n    try {\n      const data = await axios.get(\n        `https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`\n      );\n      setMeanings(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(meanings);\n\n  useEffect(() => {\n    dictionaryApi();\n    // eslint-disable-next-line\n  }, [word, category]);\n\n  const PurpleSwitch = withStyles({\n    switchBase: {\n      color: grey[50],\n      \"&$checked\": {\n        color: grey[900],\n      },\n      \"&$checked + $track\": {\n        backgroundColor: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        height: \"100vh\",\n        backgroundColor: LightTheme ? \"#fff\" : \"#282c34\",\n        color: LightTheme ? \"black\" : \"white\",\n        transition: \"all 0.5s linear\",\n      }}\n    >\n      <Container\n        maxWidth=\"md\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100vh\",\n          justifyContent: \"space-evenly\",\n        }}\n      >\n        <div\n          style={{ position: \"absolute\", top: 0, right: 15, paddingTop: 10 }}\n        >\n          <span>{LightTheme ? \"Dark\" : \"Light\"} Mode</span>\n          <PurpleSwitch\n            checked={LightTheme}\n            onChange={() => setLightTheme(!LightTheme)}\n          />\n        </div>\n        <Header\n          setWord={setWord}\n          category={category}\n          setCategory={setCategory}\n          word={word}\n          setMeanings={setMeanings}\n          LightTheme={LightTheme}\n        />\n        {meanings && (\n          <Definitions\n            meanings={meanings}\n            word={word}\n            LightTheme={LightTheme}\n            category={category}\n          />\n        )}\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}